/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_space2enter {
            bindings = <&kp ENTER>;
            key-positions = <39 23>;
            timeout-ms = <250>;
        };

        combo_locknumpad {
            bindings = <&tog 3>;
            key-positions = <39 40>;
        };
    };

    macros {
        parens: parens {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LPAR &kp RPAR &kp LEFT_ARROW>;
            label = "PARENS";
        };
    };

    behaviors {
        Tap_to_3: Tap_to_3 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_TO_3";
            #binding-cells = <0>;
            bindings = <&kp SLASH>, <&to 3>;
        };

        Tap_to_0: Tap_to_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_TO_0";
            #binding-cells = <0>;
            bindings = <&kp KP_EQUAL>, <&to 0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Default Layer";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB                     &kp Q  &kp W  &kp E     &kp R  &kp T                     &kp Y      &kp U  &kp I      &kp O    &kp P        &kp BSPC
&lt 3 CAPSLOCK              &kp A  &kp S  &kp D     &kp F  &kp G                     &kp H      &kp J  &kp K      &kp L    &kp SEMI     &kp SQT
&mt LSHFT LEFT_PARENTHESIS  &kp Z  &kp X  &kp C     &kp V  &kp B                     &kp N      &kp M  &kp COMMA  &kp DOT  &lt 1 SLASH  &mt RIGHT_SHIFT RIGHT_PARENTHESIS
                                          &kp LGUI  &mo 2  &mt LEFT_CONTROL SPACE    &kp SPACE  &mo 1  &kp RALT
            >;
        };

        lower_layer {
            display-name = "Lower Layer";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE  &trans  &trans  &trans    &trans  &trans    &kp PAGE_UP             &kp HOME                &kp LG(TAB)   &kp END            &none    &kp DELETE
&trans      &trans  &trans  &trans    &trans  &trans    &kp PAGE_DOWN           &kp LG(LC(LEFT_ARROW))  &kp UP_ARROW  &kp LG(LC(RIGHT))  &trans   &trans
&kp LSHFT   &trans  &trans  &trans    &trans  &trans    &kp LS(LG(LEFT_ARROW))  &kp LEFT                &kp DOWN      &kp RIGHT          &parens  &trans
                            &kp LGUI  &trans  &trans    &mt DEL SPACE           &trans                  &kp RC(RALT)
            >;
        };

        raise_layer {
            display-name = "Raise Layer";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE            &kp EXCL    &kp AT        &kp HASH      &kp DLLR      &kp PRCNT       &kp CARET  &kp AMPS   &kp ASTRK  &parens   &kp PRINTSCREEN  &kp DEL
&kp ENTER             &trans      &trans        &trans        &trans        &out OUT_TOG    &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH         &kp GRAVE
&kp LA(LEFT_CONTROL)  &bt BT_CLR  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0    &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE         &kp TILDE
                                                &kp LGUI      &trans        &trans          &trans     &trans     &kp RALT
            >;
        };

        Numpad {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &kp KP_MULTIPLY  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_MINUS  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp KP_DIVIDE    &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_PLUS   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans           &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &Tap_to_0     &trans
                        &trans  &trans  &trans    &trans           &kp KP_NUMBER_0  &kp PERIOD
            >;
        };
    };
};
